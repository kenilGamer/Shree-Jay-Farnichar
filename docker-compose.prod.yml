# Lumelight Interior - Production Docker Compose
# Ubuntu 25.04 - srv1051246.hstgr.cloud

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: lumelight-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-lumelight_mongo_2024}
      MONGO_INITDB_DATABASE: lumelight-interior
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "127.0.0.1:27017:27017"
    networks:
      - lumelight-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lumelight-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-lumelight_mongo_2024}@mongodb:27017/lumelight-interior?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      JWT_EXPIRES_IN: 7d
      EMAIL_USER: ${EMAIL_USER:-lumelightinterior@gmail.com}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      CORS_ORIGIN: https://lumelightinterior.in
    volumes:
      - ./backend/uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "127.0.0.1:5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - lumelight-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lumelight-frontend
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - lumelight-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and sessions)
  redis:
    image: redis:7.2-alpine
    container_name: lumelight-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-lumelight_redis_2024}
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - lumelight-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Proxy (if not using frontend container)
  nginx-proxy:
    image: nginx:alpine
    container_name: lumelight-nginx-proxy
    restart: unless-stopped
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - lumelight-network
    profiles:
      - proxy

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  lumelight-network:
    driver: bridge
